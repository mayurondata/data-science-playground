Topics to cover in this section:

1. Function Basics
- def syntax and function structure
- Positional and keyword arguments
- Default parameter values
- Return statements and multiple returns
- Variable scope: local, global, nonlocal

2. *args and **kwargs
- Variable-length positional arguments (*args)
- Variable-length keyword arguments (**kwargs)
- Mixing with regular parameters
- Practical examples

3. Lambda, map, filter, reduce
- Anonymous functions using lambda
- Functional tools: map(), filter()
- functools.reduce() usage
- Comparison with regular functions

4. Closures
- Functions returning functions
- Maintaining internal state
- Use-cases like counters, loggers

5. Decorators
- What is a decorator and when to use it
- Creating basic decorators
- Using @decorator syntax
- Function wrappers with *args and **kwargs
- Using functools.wraps to preserve metadata
- Decorators with arguments
- Chained decorators
- Real-world examples (timing, logging, access control)
